openapi: "3.0.0"
info:
  version: 1.0.0
  title: Test api
  description: OpenAPI 3.0 specification of shaman API
paths:
  /:
    get:
      description: foo
      responses:
        200:
          description: foo
          content:
            application/json:
              schema:
                type: object
                required: [foo]
                properties:
                  foo: { type: string }
            text/plain: {}
  /entities/{id}:
    get:
      description: get entity
      parameters:
        - name: id
          in: path
          schema: { type: integer }
      responses:
        200:
          description: entity
          content:
            application/json:
              schema:
                type: object
                required: [entity]
                properties:
                  entity:
                    type: object
                    required: [id]
                    properties:
                      id: { type: integer }

  /bad_status:
    get:
      description: foo
      responses:
        200:
          description: foo
          content:
            application/json:
              schema:
                type: object
                required: [foo]
                properties:
                  foo: { type: string }
  /bad_type:
    get:
      description: foo
      responses:
        200:
          description: foo
          content:
            application/xml:
              schema:
                type: object
                required: [foo]
                properties:
                  foo: { type: string }
  /bad_schema:
    get:
      description: foo
      responses:
        200:
          description: foo
          content:
            application/json:
              schema:
                type: object
                required: [foo]
                properties:
                  foo: { type: string }

  /no_content:
    get: 
      description: foo
      responses:
        200:
          description: foo
  
  /content_and_no_schema:
    get: 
      description: foo
      responses:
        200:
          description: foo
          content:
            text/plain: {}
  /complex_content_type:
    get:
      description: foo
      responses:
        200:
          description: foo
          content:
            application/json:
              schema:
                type: object
                required: [foo]
                properties:
                  foo: { type: string }
  /foo:
    get:
      description: foo
      responses:
        200:
          description: foo
          content:
            application/json:
              schema:
                type: object
                required: [items]
                properties:
                  items: { type: array }
        default:
          description: bar
          content:
            application/json:
              schema:
                type: object
                required: [error]
                properties:
                  error: { type: string }
